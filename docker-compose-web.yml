version: '3.8'

services:
  fastapi_server:
    container_name: cloud_fastapi_server
    build: ./backend
    restart: always
    command: "sh -c 'gunicorn -w 3 -k uvicorn.workers.UvicornWorker app.main:app  --bind 0.0.0.0:8000 --preload --log-level=debug --timeout 120'"
    volumes:
      - ./backend/app:/code
    expose:
      - 8000
    env_file: "./backend/.env"
    # depends_on:
      # postgres:
      #   condition: service_healthy
  
  # postgres:
  #   container_name: cloud_postgres
  #   image: postgres
  #   restart: always
  #   expose:
  #     - 5432
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   environment:
  #     POSTGRES_USER: ${POSTGRES_USER}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #     POSTGRES_DB: ${POSTGRES_DB}
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5

  nginx_reverse_proxy:
    container_name: nginx_reverse_proxy
    image: nginx:alpine
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - nginx_logs:/var/log/nginx
      - nginx_html:/usr/share/nginx/html
    depends_on:
      - fastapi_server

volumes:
  nginx_logs:
  nginx_html:
  postgres_data:
